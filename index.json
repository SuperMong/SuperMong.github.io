[{"content":"Same as all ( maybe ) programming languages, JavaScript has some statements for loop:\n while do\u0026hellip;while for for\u0026hellip;in for\u0026hellip;of label break and continue Most of them are common in other languages, I only introduce for...in, for...of and label here.  for\u0026hellip;in The for...in is a statement can traverse all enumerable properties of an object.\nfor (variable in object) { statements } The following function can return a string that lists the propertie names and their values:\nfunction list(obj) { let result = \u0026#34;\u0026#34;; for (let i in obj) { result += i + \u0026#34;: \u0026#34; + obj[i] + \u0026#34; \u0026#34;; } return result; } For an object person with properties name and sex, list(person) will return \u0026ldquo;name: SuperMong sex: male \u0026ldquo;.\nNotice: If you want to traverse enumerable properties of an object, for...in is a good choice. But for an array (map, set, and so on), for...in will traverse user-defined properties, not array elements.\nfor\u0026hellip;of Dirrerent from for...in, for...of statement traverse values of an object.\nfor (variable of object) { statements } The following code can make it clearly:\nvar arr = [5, 2, 6]; let sum = 0; for (let n of arr) { sum += n; // The value of sum is 5 + 2 + 6 = 13; } label The label can identify statements. It always be used with break and continue to control loops.\nlabel: statements A simple example:\nlet x = 0; someLoop: while (true) { x += 1; let y = 0; while (true) { y += 1; if (y === 9) { break someLoop; } } } ","permalink":"https://supermong.github.io/posts/javascript-loop-and-iteration/","summary":"Same as all ( maybe ) programming languages, JavaScript has some statements for loop:\n while do\u0026hellip;while for for\u0026hellip;in for\u0026hellip;of label break and continue Most of them are common in other languages, I only introduce for...in, for...of and label here.  for\u0026hellip;in The for...in is a statement can traverse all enumerable properties of an object.\nfor (variable in object) { statements } The following function can return a string that lists the propertie names and their values:","title":"JavaScript Loop and Iteration"},{"content":"Since I used git, I have always wanted to know how to write a concise and clear commit message? After entering the job, I found that Angular\u0026rsquo;s specification is the most popular specification. So, let\u0026rsquo;s start learning it.\nCommit Message Format Each commit message consists of a header, a body and a footer:\n\u0026lt;header\u0026gt; \u0026lt;BLANK LINE\u0026gt; \u0026lt;body\u0026gt; \u0026lt;BLANK LINE\u0026gt; \u0026lt;footer\u0026gt; Header A commit message must has header, and it has its own format:\n\u0026lt;type\u0026gt;(\u0026lt;scope\u0026gt;): \u0026lt;short summary\u0026gt;\nThe type field is mandatory, must be one of following:\n build: Changes that affect the build system or external dependencies ci: Changes to our CI configuration files and scripts docs: Documentation only changes feat: A new feature fix: A bug fix pref: A code change that improves performance refactor: A code change that neither fixes a bug nor adds a feature test: Adding missing tests or correcting existing tests  The scope field is optional, should be the name of the package affected.\nAnd summary is the description of the commit. It\u0026rsquo;s also mandatory and there are some rules to write it:\n use imperative don\u0026rsquo;t capitalize the first letter no dot (.) at the end  Body If commit type is docs, then body is required, In other cases, it\u0026rsquo;s optional.\nJust like summary, explain why you are making the change.\nFooter The footer can contain information for breaking changes and deprecations, and is also a place to reference issues.\n","permalink":"https://supermong.github.io/posts/how-to-wirte-git-commit-message/","summary":"Since I used git, I have always wanted to know how to write a concise and clear commit message? After entering the job, I found that Angular\u0026rsquo;s specification is the most popular specification. So, let\u0026rsquo;s start learning it.\nCommit Message Format Each commit message consists of a header, a body and a footer:\n\u0026lt;header\u0026gt; \u0026lt;BLANK LINE\u0026gt; \u0026lt;body\u0026gt; \u0026lt;BLANK LINE\u0026gt; \u0026lt;footer\u0026gt; Header A commit message must has header, and it has its own format:","title":"How to write a commit message in Git?"},{"content":"Hello world, I\u0026rsquo;m SuperMong, come from China.\nThis is my first post on the blog. In the future, I will post some of my study notes and essays in English ( A challenge ).\nIt\u0026rsquo;s not clear yet, but this is the list of notes I am going to post:\n   note state     HTML undo   JavaScript undo   TypeScript undo   Design Patterns (GoF) undo   Docker undo    ","permalink":"https://supermong.github.io/posts/my-first-post/","summary":"Hello world, I\u0026rsquo;m SuperMong, come from China.\nThis is my first post on the blog. In the future, I will post some of my study notes and essays in English ( A challenge ).\nIt\u0026rsquo;s not clear yet, but this is the list of notes I am going to post:\n   note state     HTML undo   JavaScript undo   TypeScript undo   Design Patterns (GoF) undo   Docker undo    ","title":"My First Post"}]