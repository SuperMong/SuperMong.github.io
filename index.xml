<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SuperMong&#39;s Blog</title>
    <link>https://supermong.github.io/</link>
    <description>Recent content on SuperMong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Nov 2021 09:07:42 +0800</lastBuildDate><atom:link href="https://supermong.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript Object</title>
      <link>https://supermong.github.io/posts/javascript-object/</link>
      <pubDate>Tue, 16 Nov 2021 09:07:42 +0800</pubDate>
      
      <guid>https://supermong.github.io/posts/javascript-object/</guid>
      <description>Object is always an important concept in object-based language, and JavaScript is a simple object-based language.
An object is a collection of properties. And a property is an association between a key and a value, the value can be a function, in witch case the property is known as a method.
Creat Object There are three ways to creat an object:
  Object Initializer:
var obj = { property_1: value_1, property_2: value_2, property_3: value_3, };   Object Constructor:</description>
    </item>
    
    <item>
      <title>Compiler Principles Introduce</title>
      <link>https://supermong.github.io/posts/compiler-principles-introduce/</link>
      <pubDate>Sun, 14 Nov 2021 17:15:38 +0800</pubDate>
      
      <guid>https://supermong.github.io/posts/compiler-principles-introduce/</guid>
      <description>In college, compiler principles was a boring course for me, because I tought it was useless to me. After working for a while, I think mastering it is very helpful for me. So I started to learn it again (serious).
Today, most programmers write programs in heigh-level languages. These languages provide a high level of abstraction to make programming easier. Naturally, there is a question: &amp;ldquo;How does the computer run these heigh-level programs?</description>
    </item>
    
    <item>
      <title>Regular Expression Basics</title>
      <link>https://supermong.github.io/posts/regular-expression-basics/</link>
      <pubDate>Fri, 12 Nov 2021 10:10:10 +0800</pubDate>
      
      <guid>https://supermong.github.io/posts/regular-expression-basics/</guid>
      <description>Regular Expression is a powerful and complex tool for processing string. Using it can greatly improve work efficiency, but due to its complexity, novices are often discouraged.
I have learned regular expression many times, but I forget everytime bucause lack of practice. So I writing this blog to remind me that only use it to master it.
TODO Compilers principles first.</description>
    </item>
    
    <item>
      <title>My Air Fryer Recipe</title>
      <link>https://supermong.github.io/posts/my-air-fryer-recipe/</link>
      <pubDate>Thu, 11 Nov 2021 21:44:31 +0800</pubDate>
      
      <guid>https://supermong.github.io/posts/my-air-fryer-recipe/</guid>
      <description>Due to the high cost of living in Beijing and my shortage of wages, I have to cook by myself to save some money. But cooking is a pain for me ( I&amp;rsquo;m lazy ), so i bought an air fryer ( It&amp;rsquo;s cheap and easy to use ).
This blog is used to record my air fryer recipe.
Fries  Buy semi-finished fries Preheat the air fryer at 180 degrees for 5 minutes Put semi-finished fries in to air fryer Bake at 200 degrees for 10 to 15 minutes  TODO  Orleans Drumsticks Fried Dumpling Steak  </description>
    </item>
    
    <item>
      <title>JavaScript Closure</title>
      <link>https://supermong.github.io/posts/javascript-closure/</link>
      <pubDate>Thu, 11 Nov 2021 10:25:10 +0800</pubDate>
      
      <guid>https://supermong.github.io/posts/javascript-closure/</guid>
      <description>Closure is one of the most important features of JavaScript, and its hard to understand. As a JavaScript novice, I write down my understanding of closure here.
Function scope Let&amp;rsquo;s start with function scope. The rule of function scope is simple: Inside function can access all the scopes that outside function can access, but outside function can&amp;rsquo;t access inside function&amp;rsquo;s scope.
function outside() { var outVar = &amp;#34;out variable&amp;#34;; function inside() { var inVar = &amp;#34;in variable&amp;#34;; return outVar + &amp;#34; + &amp;#34; + inVar;	// return: &amp;#34;out variable + in variable&amp;#34;  } return outVar + &amp;#34; + &amp;#34; + inVar;	// Error: can not access variable &amp;#39;inVar&amp;#39; } What happens if multiple functions are nested?</description>
    </item>
    
    <item>
      <title>JavaScript Loop and Iteration</title>
      <link>https://supermong.github.io/posts/javascript-loop-and-iteration/</link>
      <pubDate>Wed, 10 Nov 2021 17:56:40 +0800</pubDate>
      
      <guid>https://supermong.github.io/posts/javascript-loop-and-iteration/</guid>
      <description>Same as all ( maybe ) programming languages, JavaScript has some statements for loop:
 while do&amp;hellip;while for for&amp;hellip;in for&amp;hellip;of label break and continue  Most of them are common in other languages, I only introduce for...in, for...of and label here.
for&amp;hellip;in The for...in is a statement can traverse all enumerable properties of an object.
for (variable in object) { statements } The following function can return a string that lists the propertie names and their values:</description>
    </item>
    
    <item>
      <title>How to write a commit message in Git?</title>
      <link>https://supermong.github.io/posts/how-to-wirte-git-commit-message/</link>
      <pubDate>Tue, 09 Nov 2021 17:36:52 +0800</pubDate>
      
      <guid>https://supermong.github.io/posts/how-to-wirte-git-commit-message/</guid>
      <description>Since I used git, I have always wanted to know how to write a concise and clear commit message? After entering the job, I found that Angular&amp;rsquo;s specification is the most popular specification. So, let&amp;rsquo;s start learning it.
Commit Message Format Each commit message consists of a header, a body and a footer:
&amp;lt;header&amp;gt; &amp;lt;BLANK LINE&amp;gt; &amp;lt;body&amp;gt; &amp;lt;BLANK LINE&amp;gt; &amp;lt;footer&amp;gt; Header A commit message must has header, and it has its own format:</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://supermong.github.io/posts/my-first-post/</link>
      <pubDate>Mon, 08 Nov 2021 21:35:06 +0800</pubDate>
      
      <guid>https://supermong.github.io/posts/my-first-post/</guid>
      <description>Hello world, I&amp;rsquo;m SuperMong, come from China.
This is my first post on the blog. In the future, I will post some of my study notes and essays in English ( A challenge ).
It&amp;rsquo;s not clear yet, but this is the list of notes I am going to post:
   note state     HTML undo   JavaScript undo   TypeScript undo   Design Patterns (GoF) undo   Docker undo    </description>
    </item>
    
    
    
  </channel>
</rss>
